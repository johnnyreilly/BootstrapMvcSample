@using BootstrapSupport
@model Object
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset class="form-horizontal">
        <legend>@Model.GetLabel() <small>Details</small></legend>
        @foreach (var property in Model.VisibleProperties())
        {
            @Html.BeginControlGroupFor(property.Name)
                @Html.Label(property.Name.ToSeparatedWords(), new { @class = "control-label" })
                <div class="controls">
                    @Html.Editor(property.Name, new { @class = "input-xlarge" })
                    @Html.ValidationMessage(property.Name, null, new { @class = "help-inline" })
		        </div>
            @Html.EndControlGroup()
        }
		<div class="form-actions">
            <button type="submit" class="btn btn-primary">Save changes</button>
            @Html.ActionLink("Cancel",  "Index", null, new {@class = "btn "})
          </div>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
<script type="text/javascript">

    var currentCulture = $("meta[name='accept-language']").prop("content"),
        language;

    // Set Globalize to the current culture driven by the meta tag (if any)
    if (currentCulture) {
        language = (currentCulture in $.fn.datepicker.dates)
            ? currentCulture //a language exists which looks like "zh-CN" so we'll use it
            : currentCulture.split("-")[0]; //we'll try for a language that looks like "de" and use it if it exists (otherwise it will fall back to the default)
    }

    //Initialise any date pickers
    $('.datepicker').datepicker({ language: language });  
</script>
}